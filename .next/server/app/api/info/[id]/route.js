"use strict";(()=>{var e={};e.id=481,e.ids=[481],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9077:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>g,patchFetch:()=>h,requestAsyncStorage:()=>l,routeModule:()=>m,serverHooks:()=>f,staticGenerationAsyncStorage:()=>c});var n={};r.r(n),r.d(n,{GET:()=>p,PUT:()=>d});var a=r(9303),s=r(8716),i=r(670),o=r(7070),u=r(2663);async function p(e,{params:t}){let{id:r}=t;try{let e=await u.Z.pengumuman.findMany({where:{id:Number(r)}});if(!e)return o.NextResponse.json({message:"No announcements found"},{status:404});return o.NextResponse.json(e)}catch(e){return o.NextResponse.json({message:"Internal Server Error"},{status:500})}}async function d(e,{params:t}){let{id:r}=t;try{let{date:t,judul:n,konten:a}=await e.json(),s=await u.Z.pengumuman.update({where:{id:Number(r)},data:{date:new Date(t)}});return o.NextResponse.json(s)}catch(e){return o.NextResponse.json({message:"Internal Server Error"},{status:500})}}let m=new a.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/info/[id]/route",pathname:"/api/info/[id]",filename:"route",bundlePath:"app/api/info/[id]/route"},resolvedPagePath:"/home/azam/Documents/sis-main/app/api/info/[id]/route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:l,staticGenerationAsyncStorage:c,serverHooks:f}=m,g="/api/info/[id]/route";function h(){return(0,i.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:c})}},2663:(e,t,r)=>{r.d(t,{Z:()=>a});let n=require("@prisma/client"),a=global.globalThis.prisma||new n.PrismaClient}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[276,972],()=>r(9077));module.exports=n})();